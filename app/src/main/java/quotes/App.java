/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.*;
import com.google.gson.reflect.TypeToken;
import quotes.quotesFile.ApiQuotes;
import quotes.quotesFile.Quotes;


import java.io.*;
import java.lang.reflect.Array;
import java.lang.reflect.Type;
import java.net.HttpURLConnection;
import java.net.ProtocolException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class App {

    public static  void main(String[] args) throws IOException {

        fromJSONFile();
        getFromApi();

    }
    public static void getFromApi() throws IOException {
        String url = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
        HttpURLConnection connection = (HttpURLConnection) new URL(url).openConnection();
        connection.setConnectTimeout(5000);
        connection.setReadTimeout(5000);
        connection.setRequestMethod("GET");
        int responseCode = connection.getResponseCode();
        System.out.println(responseCode);
        if
        (responseCode == HttpURLConnection.HTTP_OK){
            InputStreamReader inputStreamReader = new InputStreamReader(connection.getInputStream());
            BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
            String data = bufferedReader.readLine();
//            System.out.println(data);
            bufferedReader.close();
            Gson gson = new Gson();
            ApiQuotes quotes = gson.fromJson(data, ApiQuotes.class);
            String jsonOutput = gson.toJson(quotes);
            System.out.println(jsonOutput);
            System.out.println("Author : " + quotes.getQuoteAuthor());
            System.out.println("Text : " + quotes.getQuoteText());
            Reader quoteReader = new FileReader("app/src/main/resources/quotesFile.json");
            ApiQuotes[] numQuotes = gson.fromJson(quoteReader, ApiQuotes[].class);
            ArrayList<ApiQuotes> array = new ArrayList<>(Arrays.asList(numQuotes));
            array.add(quotes);
            System.out.println(quotes.toString());
            FileWriter infoFileWriter = new FileWriter("app/src/main/resources/quotesFile.json", true);
            gson.toJson(array.toArray(), infoFileWriter);
            infoFileWriter.close();

        }
    }

    public static <Founder> void fromJSONFile() throws IOException {

        // create Gson instance
        Gson gson = new Gson();

        // create a reader
        Reader reader = Files.newBufferedReader(Paths.get("app/src/main/resources/quotesFile.json"));

        Type founderListType = new TypeToken<ArrayList<Founder>>() {}.getType();
        List<Founder> founderList = gson.fromJson(reader, founderListType);

        System.out.println(founderList.size());

        Object txt = founderList.get(getRandomNumber(1, 159));
        System.out.println(txt);
        quotesData(txt);

        // close reader
        reader.close();



    }
    private static void quotesData (Object list){

        Gson gson = new Gson();

        String jsonOut = gson.toJson(list);
        System.out.println(jsonOut);

        Quotes userObj = gson.fromJson(jsonOut, Quotes.class);
        System.out.println("Text : from json file " + userObj.getText());
        System.out.println("Author : from json file" + userObj.getAuthor());


    }

    public static int getRandomNumber ( int min, int max){
        return (int) ((Math.random() * (max - min)) + min);
    }
}
